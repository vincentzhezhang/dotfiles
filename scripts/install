#! /usr/bin/env bash
set -e

if [[ "$SHIT_GOT_REAL" == 'x' ]]; then
  if [[ -n $XDG_CONFIG_HOME ]]; then
    >&2 echo "Using existing \$XDG_CONFIG_HOME: $XDG_CONFIG_HOME"
  else
    XDG_CONFIG_HOME="/$HOME/.config"
    >&2 echo "\$XDG_CONFIG_HOME is not set, using default: $XDG_CONFIG_HOME"
  fi
  TARGET_HOME=$HOME
else
  TARGET_HOME="/tmp/$HOME"
  XDG_CONFIG_HOME="/tmp/$HOME/.config"
  rm -rf "$XDG_CONFIG_HOME"
  mkdir -p "$XDG_CONFIG_HOME"
fi

here=$(dirname "${BASH_SOURCE[0]}")
source_dir="$(readlink -f "$here/..")"

>&2 echo ">>> \$source_dir: $source_dir"
>&2 echo ">>> \$XDG_CONFIG_HOME: $XDG_CONFIG_HOME"

>&2 echo 'Installing dot files...'
stow --verbose=2 --no-fold --dir="$source_dir" --target="$XDG_CONFIG_HOME" config
>&2 echo 'Installed dot files!'


echo 'Hacking for non-standard apps'
# XXX hack can be:
# - use environment or variable to override the config loading path (prefered)
# - link config file back to $HOME
# - others?

echo 'Hacking for bash...'
ln -nsf "$XDG_CONFIG_HOME/bash/bashrc" "$TARGET_HOME/.bashrc"

echo 'hacking for tmux tpm...'
mkdir -p "$TARGET_HOME/.tmux/plugins"
ln -nsf "$XDG_CONFIG_HOME/tmux/tmux.conf" "$TARGET_HOME/.tmux.conf"
ln -nsf "$XDG_CONFIG_HOME/tmux/plugins/my" "$TARGET_HOME/.tmux/plugins/my"

echo 'TODO: hacking for vim...'
echo 'Hacked!'

if [[ "$SHIT_GOT_REAL" == 'x' ]]; then
  find "$TARGET_HOME" -maxdepth 3 -type l -mmin -5 | xargs stat --printf '%N\n' | sort | column -t
else
  tree -aCF "$(readlink -f "$TARGET_HOME/..")"
fi

exit 0































































































cat << EOF

 ██████╗  ██████╗ ███╗   ██╗███████╗
 ██╔══██╗██╔═══██╗████╗  ██║██╔════╝
 ██║  ██║██║   ██║██╔██╗ ██║█████╗
 ██║  ██║██║   ██║██║╚██╗██║██╔══╝
 ██████╔╝╚██████╔╝██║ ╚████║███████╗
 ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚══════╝

EOF
