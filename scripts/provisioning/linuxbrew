#! /usr/bin/env bash

set -eu

source ../../config/bash/bash.env
source ../utils.sh

__.log_info "Using prefix: ${__prefix_linuxbrew:?}"

main() {
  install_linuxbrew
  install_linuxbrew_apps
}

install_linuxbrew(){
  if hash brew 2>/dev/null; then
    __.log_info 'Linuxbrew is installed, skipping...'
    brew --version

    set +u # some path brew want to update may not be defined yet
    brew_envs=$("$__prefix_linuxbrew/bin/brew" shellenv)
    eval "$brew_envs"
    set -u
    echo '--------'
    env | grep -i brew | sort -i
    echo '--------'

    return 0
  fi

  __.log_info 'Installing linuxbrew...'
  sudo usermod --append --groups linuxbrew "$USER"

  sudo mkdir --parents "$__prefix_linuxbrew"
  sudo chown --recursive "$(whoami):linuxbrew" "$__prefix_linuxbrew"

  git clone --quiet --depth 1 https://github.com/Homebrew/brew "$__prefix_linuxbrew"
  $(
    cd "$__prefix_linuxbrew"
    sudo mkdir --parents \
      Cellar \
      etc \
      include \
      lib \
      opt \
      sbin \
      share \
      var/homebrew/linked
    sudo chmod --recursive ug+rwx \
      Cellar \
      etc \
      include \
      lib \
      opt \
      sbin \
      share \
      var/homebrew/linked
  )
  sudo chown --recursive "$(whoami):linuxbrew" $__prefix_linuxbrew

  __.log_info 'Configuring linuxbrew...'

  set +u # some path brew want to update may not be defined yet
  brew_envs=$("$__prefix_linuxbrew/bin/brew" shellenv)
  eval "$brew_envs"
  set -u
  echo '--------'
  env
  echo '--------'

  brew --version
}

install_linuxbrew_apps(){
  __.log_warning 'TODO: install_linuxbrew_apps!'
  return 0
  #
  # Ulilities
  #

  brew install fd # better alternative to find
  brew install ag # better alternative to grep

  #
  # brew installs
  #

  # better alternative for curl
  brew install httpie
  # handy spark lines
  brew install spark
  # YGNI
  brew install youtube-dl
  # JSON for cli
  brew install jq
  # website pressure test (better than ab)
  brew install wrk

  #
  # linters
  #

  # TODO
  # - just throwing thought here, apps should really be defined under categories with name and source
  #   then be consumed by installer
  declare -A linters
  # could just refer to the ale's supported-tools doc for a comprehensive curated list

  # docker file linter
  brew install hadolint

  brew install yamllint

  # FIXME shellcheck, no ideal way to install on a restricted machine yet
  # shell linter
  brew install shellcheck
}

main

# vim: set autoindent expandtab number textwidth=119 tabstop=2 shiftwidth=2 :
