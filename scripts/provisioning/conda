#! /usr/bin/env bash

set -eu

source ../../config/bash/bash.env
source ../utils.sh

__.log_info "Using prefix: ${__prefix_conda:?}"

main(){
  install_conda
  create_conda_envs
}

install_conda(){
  if hash conda 2>/dev/null; then
    __.log_info 'conda is installed, skipping...'
    conda --version
    return 0
  fi

  __.log_info 'Installing conda...'
  local conda_script_path='/tmp/conda.sh'
  if [[ ! -f "$conda_script_path" ]]; then
      wget -O "$conda_script_path" https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
  fi

  chmod +x "$conda_script_path"
  "$conda_script_path" -b -p "$__prefix_conda"
  conda --version
}

pip_check_proxy() {
  #
  # pip won't work with socks proxy unless pysocoks is installed
  #
  if [[ ! ${all_proxy:-x} = socks* ]]; then  # bash 5.0 has stricter unbound variables check
    return
  fi

  __.log_info "socks proxy: $all_proxy detected, installing dependencies..."

  python_path=${1:?}
  __all_proxy="$all_proxy"
  unset all_proxy

  "$python_path" -m pip install --upgrade pysocks

  export all_proxy="$__all_proxy"
}

create_conda_envs(){
  if [[ -d "${__prefix_conda:?}/envs/py3" ]]; then
    __.log_info 'Conda env py3 already exists, skipping...'
  else
    __.log_info 'Creating conda env py3...'
    conda create --yes --name py3 python=3
  fi

  pip_check_proxy "${__prefix_conda:?}/envs/py3/bin/python"
  "${__prefix_conda:?}/envs/py3/bin/python" -m pip install --upgrade pynvim

  # TODO maybe get ride of py2 support
  if [[ -d "${__prefix_conda:?}/envs/py2" ]]; then
    __.log_info 'Conda env py2 already exists, skipping...'
  else
    __.log_info 'Creating conda env py2...'
    conda create --yes --name py2 python=2
  fi

  pip_check_proxy "${__prefix_conda:?}/envs/py2/bin/python"
  "${__prefix_conda:?}/envs/py2/bin/pip" install --upgrade pynvim
}

main

# vim: set autoindent expandtab nowrap number textwidth=119 tabstop=2 shiftwidth=2 :
