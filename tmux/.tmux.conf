# TODO
# - add activity/bell ignore list
# - add key binding for switch to next/prev bell/activity marker
# - try tmux-ressurect
# - add caps lock (maybe other locks) status indicator

# Terminfo
set -g default-terminal "screen-256color"
set -ga terminal-overrides ',*:Tc' # true color support
set -ga terminal-overrides ',*:smxx=\e[9m' # strike through support FIXME seems not working
# FIXME temporary workaround for mouse selection add junkies to screen
# seems also gnome-terminal Gnome-terminal doesn't support setting the
# clipboard using xterm escape sequences so we should ensure the set-clipboard
# option is off.
set -s set-clipboard off

set -g visual-bell off
set -g bell-action current

#
# appearance settings
#

set -g allow-rename off
setw -g automatic-rename off
set -g set-titles off

#
# behaviour settings
#

# unbind unused keys
unbind C-o # rotate the panes in the current window forwards
unbind C-b # default prefix
set -g prefix M-Escape
bind M-Escape send-prefix
bind C-a send-prefix


# reload config
bind r source-file ~/.tmux.conf \; display-message "Tmux config has been reloaded..."

# Enable mouse mode
set -g mouse on

# Custom bindings
bind K send-keys -R \; clear-history

# replace split key bindings and make them start with current path
bind -n M-\ split-window -h -c "#{pane_current_path}"
bind -n M-- split-window -v -c "#{pane_current_path}"
bind -n M-n new-window -c "#{pane_current_path}"
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind { swap-window -t -1
bind } swap-window -t +1

# renumber window for easier switching
set -g renumber-windows on

set -g focus-events on

# basic settings
setw -g xterm-keys on # for vim
setw -g mode-keys vi # vi key
setw -g status-keys vi
setw -g monitor-activity on

# Setup 'v' to begin selection as in Vim
# Using xclip to copy selection without exit the visual mode
# bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "xclip -se c -i"
# FIXME seems xclip copied content does not preserve newlines in GUI
# applications, which is not the case when using xsel, needs double check
bind -T copy-mode-vi C-WheelUpPane send -X halfpage-up
bind -T copy-mode-vi C-WheelDownPane send -X halfpage-down
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'r' send -X rectangle-toggle

# 0 is too far away
set -g base-index 1
set -g pane-base-index 1

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind -n M-, if-shell "$is_vim" "send-keys M-," "select-pane -l"

# resize pane more efficiently, note the numbers are different between vertical and horizontal
bind -n C-h resize-pane -L 10
bind -n C-j resize-pane -D 5
bind -n C-k resize-pane -U 5
bind -n C-l resize-pane -R 10
# TODO rethink about the resize behaviour in vim
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "resize-pane -L 10"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "resize-pane -D 5"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "resize-pane -U 5"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "resize-pane -R 10"

bind -n M-z resize-pane -Z

# move pane around
bind h swap-pane -s {left-of}
bind j swap-pane -s {down-of}
bind k swap-pane -s {up-of}
bind l swap-pane -s {right-of}

# toggle pane synchronization
bind -n M-s set synchronize-panes \; display-message "synchronize-panes #{?synchronize-panes,on,off}"
bind m set monitor-activity \; display-message "monitor-activity #{?monitor-activity,on,off}"

# copy mode color
setw -g mode-fg black
setw -g mode-bg yellow

# scrollback buffer size increase
set -g history-limit 99999

# Allows for faster key repetition, also address vim mode switching delay
set -g escape-time 10

# longer display duration for tmux messages
set -g display-time 666

#
# WORKAROUNDS
#

# easier ` input in 60% layout
bind -n M-q send-keys `

#
# Tmux Plugins
#
# lazy notes:
# prefix + I: install plugins
# prefix + U: update plugins
# prefix + alt + u: remove/uninstall plugins not on the plugin list

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'arcticicestudio/nord-tmux'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-yank'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

#
# TODO some appearance settings below have been commented out as status bar now
# is managed by the nord-tmux plugin at the bottom. Need double check if I want
# to override any settings
#


# status bar settings
# set -g status-attr default
# set -g status-bg colour235 #base02
# set -g status-fg colour136 #yellow
# set -g status-interval 5
# set -g status-left '#[fg=white,dim,bg=default]#(whoami)@#S#[default] '
# set -g status-left-length 90
# set -g status-right '#[fg=white,dim,bg=default]#(cut -d" " -f1-3 /proc/loadavg) | #(bash ~/.uptime)#[default]'
# set -g status-right-length 60
#
# # window title settings
# setw -g window-status-fg colour244 #base0
# setw -g window-status-bg default
# setw -g window-status-current-fg black
# setw -g window-status-current-bg green

# message text
# set -g message-bg colour235 #base02
# set -g message-fg colour166 #orange



#
# Settings that overwrite plugin defaults
#

#
# window
#
set -g window-active-style 'fg=colour250,bg=#2C323B' # bg picked from vim-deus
# set -g window-style 'fg=colour247,bg=#22272E' # active dimmed from 23 to 18
set -g window-style 'fg=colour247,bg=#262B33' # active dimmed from 23 to 20

#
# pane
#
set -g pane-active-border-style "fg=cyan,bg=default"
set -g pane-border-style "fg=#666666,bg=default"
# pane number style
set -g display-panes-active-colour colour33 #blue
set -g display-panes-colour colour166 #orange

#
# status bar
#
set -ag status-right '#{?pane_synchronized, #[bg=blue]SYNC#[default],}'

# vim: set ai et tw=119 ts=2:
