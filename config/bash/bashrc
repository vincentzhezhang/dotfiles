#! /usr/bin/env bash
# shellcheck disable=SC1090

# handy box specific injection before we load the main part
[[ -f "$XDG_CONFIG_HOME/bash/before" ]] && source "$XDG_CONFIG_HOME/bash/before"

# TODO
# - update basic configurations according to latest ubuntu bashrc
# - extra platform specific settings to a separate script

case $- in
  *i*)
    # don't don anything when running interactively
    ;;
  *)
    # otherwise source the noninteractive scripts and return
    export BASH_ENV="$XDG_CONFIG_HOME/bash/noninteractive"
    return
    ;;
esac

#
# load bash related script modules
#
BASH_SCRIPTS=(
  constants
  utilities
  aliases
  ps1
)

for s in "${BASH_SCRIPTS[@]}"; do
  p="$XDG_CONFIG_HOME/bash/bash_${s}"
  [[ -f "$p" ]] && source "$p"
done

shopt -s cdspell
shopt -s checkwinsize # update window size after every command
shopt -s cmdhist      # force multi-line histories format in a single line
shopt -s dirspell
shopt -s extdebug
shopt -s histappend

#
# history settings
#
hist_ignore=(
  clear
  exit
  history
)

# also see history_magic in .bash_utilities
unset HISTTIMEFORMAT
export HISTFILE="$XDG_DATA_HOME/bash_history"
HISTCONTROL=ignoreboth:erasedups
HISTSIZE=9999       # maximum entries allowed in current history
HISTFILESIZE=9999   # maximum lines allowed in history file
HISTIGNORE="$(join_by '*:' "${hist_ignore[@]}")"

# FIXME tmux-256color don't play well with many apps, e.g. git, less
export TERM='xterm-256color'
# if [[ -n $TMUX ]]; then
  # export TERM='tmux-256color'
# else
# fi

# FIXME italics are still not working properly, sad
# export TERM_ITALICS=TRUE

# Prevent file overwrite on stdout redirection
# Use `>|` to force redirection to an existing file
# XXX this seems causing more issues than benefits
# set -o noclobber

# NOTE: set -o vi has to be placed before fzf.bash in order to correctly setup key bindings
#   see: https://github.com/junegunn/fzf#key-bindings-for-command-line
set -o vi

# make less more friendly for non-text input files, see lesspipe(1)
if hash lesspipe 2>/dev/null; then
  eval "$(lesspipe)"
fi

BCMP_PATH=/usr/share/bash-completion/bash_completion
[[ -f $BCMP_PATH ]] && source $BCMP_PATH
[[ -f ~/.git-completion.bash ]] && source ~/.git-completion.bash

# enable color support
if hash dircolors 2>/dev/null; then
  if [[ -f "$XDG_CONFIG_HOME/dircolors" ]]; then
    eval "$(dircolors -b "$XDG_CONFIG_HOME/dircolors")"
  else
    eval "$(dircolors -b)"
  fi
fi
unset color_prompt force_color_prompt

# TODO
# - smart scope, e.g. use current directory or git root depends on the context
# FIXME this is not working when no delete file
# git ls-files --cached --others --exclude-standard | grep -vE $(git ls-files --deleted | paste -sd'|')
# FIXME for some reason this won't work when invoked via a variable
# comm -13 <(git ls-files --deleted | sort) <(git ls-files --cached --others --exclude-standard | sort
read -r -d '' GIT_DEFAULT_LS_COMMAND <<'BASH'
  git ls-files --cached --others --exclude-standard
BASH
export GIT_DEFAULT_LS_COMMAND

# Load fzf
[[ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash ]] && source "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash

#
# load addons
#
for addon in "$XDG_CONFIG_HOME/bash/addons"/*; do
  source "$addon"
done

# handy box specific injection after we load the main part
[[ -f "$XDG_CONFIG_HOME/bash/after" ]] && source "$XDG_CONFIG_HOME/bash/after"

# FIXME
# - proper fix to eliminate the possibility of duplicates, instead of remove
# them here manually
PATH=$(echo -n "$PATH" | awk -v RS=: -v ORS=: '!x[$0]++' | sed "s/\(.*\).\{1\}/\1/")

# just for fun
random_splash

# vim: set autoindent tabstop=2 shiftwidth=2 textwidth=79:
