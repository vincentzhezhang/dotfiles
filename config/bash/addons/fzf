#! /usr/bin/env bash

#
# FZF!
#

if ! hash fzf 2>/dev/null; then
  >&2 echo 'fzf not found!'
  return 0
fi


s() {
  # handy ssh launcher
  ssh "$(\
    grep -oP 'Host\s+\K([a-zA-Z-_])+' ~/.ssh/config \
      | sort \
      | fzf --height 40% --reverse --prompt 'ssh: ' \
  )"
}

r() {
  # TODO
  # - add support for monorepos
  repo_name=$(\
    fd --hidden --exclude 'node_modules' --type d '^.git$' "${DEV_REPO_ROOT:?}" --exec echo '{//}' \
      | sed "s|$DEV_REPO_ROOT/||g" \
      | sort -i \
      | fzf --height 40% --reverse --prompt "repo: " \
  )

  if [[ -z "$repo_name" ]]; then
    return 1
  fi

  cd "${DEV_REPO_ROOT:?}/$repo_name" && return 0 || return 1
}

read -r -d '' FZF_DEFAULT_COMMAND <<BASH
    ($GIT_DEFAULT_LS_COMMAND ||
     find . -path "*/\.*" -prune -o -type f -print -o -type l -print |
        sed s/^..//) 2> /dev/null
BASH
export FZF_DEFAULT_COMMAND

# let __fzf_cd__ ignore node_modules and static directories
read -r -d '' FZF_ALT_C_COMMAND <<BASH
command find -L . -mindepth 1 \
  \\(\
    -path '*/\\.*' -o \
    -path '*/node_modules' -o \
    -path '*/static' -o \
    -fstype 'sysfs' -o \
    -fstype 'devfs' -o \
    -fstype 'devtmpfs' -o \
    -fstype 'proc' \
  \\) -prune -o -type d -print 2> /dev/null | sed 's/^.\///'
BASH
export FZF_ALT_C_COMMAND

# let __fzf_select__ ignore node_modules and static directories
# TODO
# - determine symbolic link type and add trailing slash if applicable
read -r -d '' FZF_CTRL_T_COMMAND <<BASH
  ($GIT_DEFAULT_LS_COMMAND ||
    command find -L . -mindepth 1 \
      \\(\
          -path '*/\\.*' -o \
          -path '*/node_modules' -o \
          -path '*/static' -o \
          -fstype 'sysfs' -o \
          -fstype 'devfs' -o \
          -fstype 'devtmpfs' -o \
          -fstype 'proc' \
      \\) -prune -o \
      -type f -print -o \
      -type d -printf '%p/\n' -o \
      -type l -print \
  ) 2> /dev/null | sed 's/^.\///'
BASH
export FZF_CTRL_T_COMMAND
####################
#  fzf tweaks end  #
####################
