#! /usr/bin/env bash

#
# Misc add-ons
#

if hash rg 2>/dev/null; then
  export RIPGREP_CONFIG_PATH=$XDG_CONFIG_HOME/ripgrep/rgrc
fi

if hash bat 2>/dev/null; then
  alias cat=bat
fi

if hash exa 2>/dev/null; then
  alias ls=exa
  alias ll='exa --long'
  alias la='exa --all'
  alias tree='exa --long --tree --level=3'
fi

__.venv.python.prefix()
{
  # main interface handling various Python virtual envs
  # Priority
  # 1. Python specified in the shebang line
  # 2. Whatever virtual env detector returns
  # 3. System Python as last resort
  #
  # args:
  # - str: path [optional] path to file/directory, default: pwd
  #
  # output:
  # - str: path, path to detected python interpreter w w/o virtual env

  local path
  local py_exec
  local py_prefix

  path=$(readlink --canonicalize-existing "${1:-$PWD}")

  # 1. Python specified in the shebang line
  if [[ -f "$path" ]]; then
    # shebang detection
    local shebang_line;
    shebang_line=$(head -1 "$path")

    if [[ "$shebang_line" =~ ^#\!.+/python[23]?$ ]]; then
      py_prefix="${shebang_line###! }"
      py_prefix="${py_prefix%%/bin/python}"

      if [[ -n "$py_prefix" ]]; then
        >&2 echo 'got python from shebang line'
        echo -n "$py_prefix"
        return 0
      fi
    fi
  fi

  # 2. Whatever virtual env detector returns
  # - only have conda support for now
  if hash __.conda.clever_prefix; then
    py_prefix=$(__.conda.clever_prefix "$path")
    if [[ -n "$py_prefix" ]]; then
      >&2 echo "got python from __.conda.clever_prefix!: $py_prefix"
      echo -n "$py_prefix"
      return 0
    fi
  fi

  # 3. System Python as last resort
  py_exec=$(command -v python)
  >&2 echo 'got python from system default!'
  echo -n "${py_exec%%/bin/python}"
}


#
# Share contrast across applications
#
# TODO use new system wide contrast settings to deprecate cli app detections
# 0. Terminal color schemes
#   - adaptive color scheme for gnome-terminal
#
# 1. Vim specific settings
#   - vim adaptive color scheme DONE
#   - airline adaptive color scheme
#   - vim gutter related adaptive color scheme
#   - fzf adaptive color scheme
#
# 2. Tmux
#   - tmux adaptive color scheme for status line
get_luminance() {
  # feel free to overwrite luminance in places with consistently
  # lighting, e.g. office
  local luminance="$LUMINANCE_OVERRIDE"

  if [[ -z "$luminance" ]]; then
    local day=530
    local night=1830
    local owl=2359
    printf -v time '%(%H%M)T'

    if ((day <= time && time < night)); then
      luminance='high'
    elif ((night <= time && time < owl)); then
      luminance='normal'
    else
      luminance='low'
    fi
  fi

  echo -n "$luminance"
}


# uncategorized addons go here

if hash brew > /dev/null 2>&1; then
  # generated by brew shellenv, hardcoded here for speedup
  export HOMEBREW_PREFIX="/home/linuxbrew/.linuxbrew"
  export HOMEBREW_CELLAR="/home/linuxbrew/.linuxbrew/Cellar"
  export HOMEBREW_REPOSITORY="/home/linuxbrew/.linuxbrew"
  export MANPATH="/home/linuxbrew/.linuxbrew/share/man:$MANPATH"
  export INFOPATH="/home/linuxbrew/.linuxbrew/share/info:$INFOPATH"

  if [[ -d "$HOMEBREW_PREFIX/etc/bash_completion.d/" ]]; then
    for comp_file in "$HOMEBREW_PREFIX/etc/bash_completion.d/"*; do
      source "$comp_file"
    done
  fi
fi

####################
# fzf tweaks start #
####################
if hash fzf > /dev/null 2>&1; then
  read -r -d '' FZF_DEFAULT_COMMAND <<BASH
    ($GIT_DEFAULT_LS_COMMAND ||
     find . -path "*/\.*" -prune -o -type f -print -o -type l -print |
        sed s/^..//) 2> /dev/null
BASH
  export FZF_DEFAULT_COMMAND

  # let __fzf_cd__ ignore node_modules and static directories
  read -r -d '' FZF_ALT_C_COMMAND <<BASH
  command find -L . -mindepth 1 \
    \\(\
      -path '*/\\.*' -o \
      -path '*/node_modules' -o \
      -path '*/static' -o \
      -fstype 'sysfs' -o \
      -fstype 'devfs' -o \
      -fstype 'devtmpfs' -o \
      -fstype 'proc' \
    \\) -prune -o -type d -print 2> /dev/null | sed 's/^.\///'
BASH
  export FZF_ALT_C_COMMAND

  # let __fzf_select__ ignore node_modules and static directories
  # TODO
  # - determine symbolic link type and add trailing slash if applicable
  read -r -d '' FZF_CTRL_T_COMMAND <<BASH
    ($GIT_DEFAULT_LS_COMMAND ||
      command find -L . -mindepth 1 \
        \\(\
            -path '*/\\.*' -o \
            -path '*/node_modules' -o \
            -path '*/static' -o \
            -fstype 'sysfs' -o \
            -fstype 'devfs' -o \
            -fstype 'devtmpfs' -o \
            -fstype 'proc' \
        \\) -prune -o \
        -type f -print -o \
        -type d -printf '%p/\n' -o \
        -type l -print \
    ) 2> /dev/null | sed 's/^.\///'
BASH
  export FZF_CTRL_T_COMMAND
fi
####################
#  fzf tweaks end  #
####################
